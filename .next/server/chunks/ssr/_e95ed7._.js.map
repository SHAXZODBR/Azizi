{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/archive/page.tsx"],"sourcesContent":["import Link from \"next/link\";\n\n// This represents the data structure for each archive entry\ninterface ArchiveEntry {\n  id: string;\n  number: number;\n  status?: string;\n  content?: string;\n  imageUrl?: string;\n  pdfUrl?: string;\n}\n\n// Define a proper type for the entries object\ninterface EntriesMap {\n  [key: number]: ArchiveEntry | undefined;\n}\n\ninterface YearData {\n  year: number;\n  entries: EntriesMap;\n}\n\n// Mock data structure - replace with your actual data fetching logic\nconst getArchiveData = (): YearData[] => {\n  // In a real implementation, this would come from your database\n  return [\n    {\n      year: 2025,\n      entries: {\n        0: { id: \"510\", number: 510, status: \"В печати\" },\n      },\n    },\n    {\n      year: 2024,\n      entries: {\n        0: { id: \"498\", number: 498 },\n        1: { id: \"499\", number: 499 },\n        2: { id: \"500\", number: 500 },\n        3: { id: \"501\", number: 501 },\n        4: { id: \"502\", number: 502 },\n        5: { id: \"503\", number: 503 },\n        6: { id: \"504\", number: 504 },\n        7: { id: \"505\", number: 505 },\n        8: { id: \"506\", number: 506 },\n        9: { id: \"507\", number: 507 },\n        10: { id: \"508\", number: 508 },\n        11: { id: \"509\", number: 509 },\n      },\n    },\n    {\n      year: 2023,\n      entries: {\n        0: { id: \"486\", number: 486 },\n        1: { id: \"487\", number: 487 },\n        2: { id: \"488\", number: 488 },\n        3: { id: \"489\", number: 489 },\n        4: { id: \"490\", number: 490 },\n        5: { id: \"491\", number: 491 },\n        6: { id: \"492\", number: 492 },\n        7: { id: \"493\", number: 493 },\n        8: { id: \"494\", number: 494 },\n        9: { id: \"495\", number: 495 },\n        10: { id: \"496\", number: 496 },\n        11: { id: \"497\", number: 497 },\n      },\n    },\n    {\n      year: 2022,\n      entries: {\n        0: { id: \"474\", number: 474 },\n        1: { id: \"475\", number: 475 },\n        2: { id: \"476\", number: 476 },\n        3: { id: \"477\", number: 477 },\n        4: { id: \"478\", number: 478 },\n        5: { id: \"479\", number: 479 },\n        6: { id: \"480\", number: 480 },\n        7: { id: \"481\", number: 481 },\n        8: { id: \"482\", number: 482 },\n        9: { id: \"483\", number: 483 },\n        10: { id: \"484\", number: 484 },\n        11: { id: \"485\", number: 485 },\n      },\n    },\n    {\n      year: 2021,\n      entries: {\n        0: { id: \"462\", number: 462 },\n        1: { id: \"463\", number: 463 },\n        2: { id: \"464\", number: 464 },\n        3: { id: \"465\", number: 465 },\n        4: { id: \"466\", number: 466 },\n        5: { id: \"467\", number: 467 },\n        6: { id: \"468\", number: 468 },\n        7: { id: \"469\", number: 469 },\n        8: { id: \"470\", number: 470 },\n        9: { id: \"471\", number: 471 },\n        10: { id: \"472\", number: 472 },\n        11: { id: \"473\", number: 473 },\n      },\n    },\n    {\n      year: 2020,\n      entries: {\n        0: { id: \"450\", number: 450 },\n        1: { id: \"451\", number: 451 },\n        2: { id: \"452\", number: 452 },\n        3: { id: \"453\", number: 453 },\n        4: { id: \"454\", number: 454 },\n        5: { id: \"455\", number: 455 },\n        6: { id: \"456\", number: 456 },\n        7: { id: \"457\", number: 457 },\n        8: { id: \"458\", number: 458 },\n        9: { id: \"459\", number: 459 },\n        10: { id: \"460\", number: 460 },\n        11: { id: \"461\", number: 461 },\n      },\n    },\n    {\n      year: 2019,\n      entries: {\n        0: { id: \"438\", number: 438 },\n        1: { id: \"439\", number: 439 },\n        2: { id: \"440\", number: 440 },\n        3: { id: \"441\", number: 441 },\n        4: { id: \"442\", number: 442 },\n        5: { id: \"443\", number: 443 },\n        6: { id: \"444\", number: 444 },\n        7: { id: \"445\", number: 445 },\n        8: { id: \"446\", number: 446 },\n        9: { id: \"447\", number: 447 },\n        10: { id: \"448\", number: 448 },\n        11: { id: \"449\", number: 449 },\n      },\n    },\n    {\n      year: 2018,\n      entries: {\n        0: { id: \"426\", number: 426 },\n        1: { id: \"427\", number: 427 },\n        2: { id: \"428\", number: 428 },\n        3: { id: \"429\", number: 429 },\n        4: { id: \"430\", number: 430 },\n        5: { id: \"431\", number: 431 },\n        6: { id: \"432\", number: 432 },\n        7: { id: \"433\", number: 433 },\n        8: { id: \"434\", number: 434 },\n        9: { id: \"435\", number: 435 },\n        10: { id: \"436\", number: 436 },\n        11: { id: \"437\", number: 437 },\n      },\n    },\n    {\n      year: 2017,\n      entries: {\n        0: { id: \"414\", number: 414 },\n        1: { id: \"415\", number: 415 },\n        2: { id: \"416\", number: 416 },\n        3: { id: \"417\", number: 417 },\n        4: { id: \"418\", number: 418 },\n        5: { id: \"419\", number: 419 },\n        6: { id: \"420\", number: 420 },\n        7: { id: \"421\", number: 421 },\n        8: { id: \"422\", number: 422 },\n        9: { id: \"423\", number: 423 },\n        10: { id: \"424\", number: 424 },\n        11: { id: \"425\", number: 425 },\n      },\n    },\n    {\n      year: 2016,\n      entries: {\n        0: { id: \"402\", number: 402 },\n        1: { id: \"403\", number: 403 },\n        2: { id: \"404\", number: 404 },\n        3: { id: \"405\", number: 405 },\n        4: { id: \"406\", number: 406 },\n        5: { id: \"407\", number: 407 },\n        6: { id: \"408\", number: 408 },\n        7: { id: \"409\", number: 409 },\n        8: { id: \"410\", number: 410 },\n        9: { id: \"411\", number: 411 },\n        10: { id: \"412\", number: 412 },\n        11: { id: \"413\", number: 413 },\n      },\n    },\n    {\n      year: 2015,\n      entries: {\n        0: { id: \"390\", number: 390 },\n        1: { id: \"391\", number: 391 },\n        2: { id: \"392\", number: 392 },\n        3: { id: \"393\", number: 393 },\n        4: { id: \"394\", number: 394 },\n        5: { id: \"395\", number: 395 },\n        6: { id: \"396\", number: 396 },\n        7: { id: \"397\", number: 397 },\n        8: { id: \"398\", number: 398 },\n        9: { id: \"399\", number: 399 },\n        10: { id: \"400\", number: 400 },\n        11: { id: \"401\", number: 401 },\n      },\n    },\n    {\n      year: 2014,\n      entries: {\n        0: { id: \"378\", number: 378 },\n        1: { id: \"379\", number: 379 },\n        2: { id: \"380\", number: 380 },\n        3: { id: \"381\", number: 381 },\n        4: { id: \"382\", number: 382 },\n        5: { id: \"383\", number: 383 },\n        6: { id: \"384\", number: 384 },\n        7: { id: \"385\", number: 385 },\n        8: { id: \"386\", number: 386 },\n        9: { id: \"387\", number: 387 },\n        10: { id: \"388\", number: 388 },\n        11: { id: \"389\", number: 389 },\n      },\n    },\n    {\n      year: 2013,\n      entries: {\n        0: { id: \"366\", number: 366 },\n        1: { id: \"367\", number: 367 },\n        2: { id: \"368\", number: 368 },\n        3: { id: \"369\", number: 369 },\n        4: { id: \"370\", number: 370 },\n        5: { id: \"371\", number: 371 },\n        6: { id: \"372\", number: 372 },\n        7: { id: \"373\", number: 373 },\n        8: { id: \"374\", number: 374 },\n        9: { id: \"375\", number: 375 },\n        10: { id: \"376\", number: 376 },\n        11: { id: \"377\", number: 377 },\n      },\n    },\n  ];\n};\n\nconst months = [\n  \"Январь\",\n  \"Февраль\",\n  \"Март\",\n  \"Апрель\",\n  \"Май\",\n  \"Июнь\",\n  \"Июль\",\n  \"Август\",\n  \"Сентябрь\",\n  \"Октябрь\",\n  \"Ноябрь\",\n  \"Декабрь\",\n];\n\nexport default function ArchivePage() {\n  const archiveData = getArchiveData();\n\n  return (\n    <div\n      style={{ fontFamily: \"Arial, sans-serif\", padding: \"0\", margin: \"50px\" }}\n    >\n      <table\n        cellPadding=\"0\"\n        cellSpacing=\"0\"\n        style={{\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          border: \"1px solid #ccc\",\n        }}\n      >\n        <thead>\n          <tr>\n            <td\n              style={{\n                padding: \"38px\",\n                backgroundColor: \"#e6e6e6\",\n                border: \"1px solid #ccc\",\n                fontWeight: \"normal\",\n                textAlign: \"center\",\n              }}\n            ></td>\n            {months.map((month) => (\n              <td\n                key={month}\n                style={{\n                  padding: \"8px\",\n                  backgroundColor: \"#e6e6e6\",\n                  border: \"1px solid #ccc\",\n                  fontWeight: \"normal\",\n                  textAlign: \"center\",\n                  minWidth: \"100px\",\n                }}\n              >\n                {month}\n              </td>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {archiveData.map((yearData) => (\n            <tr key={yearData.year}>\n              <td\n                style={{\n                  padding: \"12px\",\n                  backgroundColor: \"#e6e6e6\",\n                  border: \"1px solid #ccc\",\n                  textAlign: \"left\",\n                }}\n              >\n                {yearData.year} год\n              </td>\n              {months.map((_, monthIndex) => {\n                const entry = yearData.entries[monthIndex];\n                return (\n                  <td\n                    key={monthIndex}\n                    style={{\n                      padding: \"8px\",\n                      border: \"1px solid #ccc\",\n                      textAlign: \"center\",\n                      backgroundColor: \"#f9f9f9\",\n                    }}\n                  >\n                    {entry ? (\n                      entry.status ? (\n                        <span style={{ color: \"#666\", fontSize: \"14px\" }}>\n                          {entry.status}\n                        </span>\n                      ) : (\n                        <Link\n                          href={`/archive/${entry.id}`}\n                          style={{\n                            color: \"#0066cc\",\n                            textDecoration: \"none\",\n                            fontSize: \"14px\",\n                          }}\n                        >\n                          №{entry.number}\n                        </Link>\n                      )\n                    ) : null}\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAsBA,qEAAqE;AACrE,MAAM,iBAAiB;IACrB,+DAA+D;IAC/D,OAAO;QACL;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;oBAAK,QAAQ;gBAAW;YAClD;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;QACA;YACE,MAAM;YACN,SAAS;gBACP,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,GAAG;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC5B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;gBAC7B,IAAI;oBAAE,IAAI;oBAAO,QAAQ;gBAAI;YAC/B;QACF;KACD;AACH;AAEA,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS;IACtB,MAAM,cAAc;IAEpB,qBACE,8OAAC;QACC,OAAO;YAAE,YAAY;YAAqB,SAAS;YAAK,QAAQ;QAAO;kBAEvE,cAAA,8OAAC;YACC,aAAY;YACZ,aAAY;YACZ,OAAO;gBACL,OAAO;gBACP,gBAAgB;gBAChB,QAAQ;YACV;;8BAEA,8OAAC;8BACC,cAAA,8OAAC;;0CACC,8OAAC;gCACC,OAAO;oCACL,SAAS;oCACT,iBAAiB;oCACjB,QAAQ;oCACR,YAAY;oCACZ,WAAW;gCACb;;;;;;4BAED,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;oCAEC,OAAO;wCACL,SAAS;wCACT,iBAAiB;wCACjB,QAAQ;wCACR,YAAY;wCACZ,WAAW;wCACX,UAAU;oCACZ;8CAEC;mCAVI;;;;;;;;;;;;;;;;8BAeb,8OAAC;8BACE,YAAY,GAAG,CAAC,CAAC,yBAChB,8OAAC;;8CACC,8OAAC;oCACC,OAAO;wCACL,SAAS;wCACT,iBAAiB;wCACjB,QAAQ;wCACR,WAAW;oCACb;;wCAEC,SAAS,IAAI;wCAAC;;;;;;;gCAEhB,OAAO,GAAG,CAAC,CAAC,GAAG;oCACd,MAAM,QAAQ,SAAS,OAAO,CAAC,WAAW;oCAC1C,qBACE,8OAAC;wCAEC,OAAO;4CACL,SAAS;4CACT,QAAQ;4CACR,WAAW;4CACX,iBAAiB;wCACnB;kDAEC,QACC,MAAM,MAAM,iBACV,8OAAC;4CAAK,OAAO;gDAAE,OAAO;gDAAQ,UAAU;4CAAO;sDAC5C,MAAM,MAAM;;;;;iEAGf,8OAAC,4JAAA,CAAA,UAAI;4CACH,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE;4CAC5B,OAAO;gDACL,OAAO;gDACP,gBAAgB;gDAChB,UAAU;4CACZ;;gDACD;gDACG,MAAM,MAAM;;;;;;mDAGhB;uCAzBC;;;;;gCA4BX;;2BA3CO,SAAS,IAAI;;;;;;;;;;;;;;;;;;;;;AAkDlC"}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}