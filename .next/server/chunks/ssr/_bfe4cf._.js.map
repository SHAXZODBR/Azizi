{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/actions/auth.ts"],"sourcesContent":["\"use server\";\n\nimport { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\n\n// This is a placeholder for your actual database implementation\n// You'll replace this with your PostgreSQL implementation later\nconst mockUsers = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\",\n    role: \"admin\",\n  },\n  {\n    id: 2,\n    name: \"Regular User\",\n    email: \"user@example.com\",\n    password: \"user123\",\n    role: \"user\",\n  },\n];\n\nexport async function login(formData: FormData) {\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Check the credentials against your database\n  // 3. Hash the password and compare it securely\n\n  // This is a mock implementation\n  const user = mockUsers.find(\n    (u) => u.email === email && u.password === password\n  );\n\n  if (!user) {\n    // In a real app, you would handle this error better\n    console.error(\"Invalid credentials\");\n    return;\n  }\n\n  // Create a session (in a real app, you would use a proper session management system)\n  const session = {\n    userId: user.id,\n    name: user.name,\n    email: user.email,\n    role: user.role,\n    expires: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 1 week\n  };\n\n  // Store the session in a cookie\n  cookies().set(\"session\", JSON.stringify(session), {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n    maxAge: 60 * 60 * 24 * 7, // 1 week\n    path: \"/\",\n  });\n\n  // Redirect based on role\n  if (user.role === \"admin\") {\n    redirect(\"/admin/archive\");\n  } else {\n    redirect(\"/archive\");\n  }\n}\n\nexport async function register(formData: FormData) {\n  const name = formData.get(\"name\") as string;\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n  const role = formData.get(\"role\") as string;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Check if the user already exists\n  // 3. Hash the password\n  // 4. Store the user in your database\n\n  // For now, just redirect to login\n  redirect(\"/login\");\n}\n\nexport async function logout() {\n  cookies().delete(\"session\");\n  redirect(\"/login\");\n}\n\nexport async function getSession() {\n  const session = cookies().get(\"session\")?.value;\n\n  if (!session) {\n    return null;\n  }\n\n  return JSON.parse(session);\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;;AAAA;;;;;AAEA,gEAAgE;AAChE,gEAAgE;AAChE,MAAM,YAAY;IAChB;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;CACD;AAEM,eAAe,uCAAG,GAAH,MAAM,QAAkB;IAC5C,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;IAE9B,4BAA4B;IAC5B,wBAAwB;IACxB,iDAAiD;IACjD,+CAA+C;IAE/C,gCAAgC;IAChC,MAAM,OAAO,UAAU,IAAI,CACzB,CAAC,IAAM,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;IAG7C,IAAI,CAAC,MAAM;QACT,oDAAoD;QACpD,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,qFAAqF;IACrF,MAAM,UAAU;QACd,QAAQ,KAAK,EAAE;QACf,MAAM,KAAK,IAAI;QACf,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;QACf,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;IACpD;IAEA,gCAAgC;IAChC,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,CAAC,UAAU;QAChD,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;QACvB,MAAM;IACR;IAEA,yBAAyB;IACzB,IAAI,KAAK,IAAI,KAAK,SAAS;QACzB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;AACF;AAEO,eAAe,uCAAM,GAAN,SAAS,QAAkB;IAC/C,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;IAC9B,MAAM,OAAO,SAAS,GAAG,CAAC;IAE1B,4BAA4B;IAC5B,wBAAwB;IACxB,sCAAsC;IACtC,uBAAuB;IACvB,qCAAqC;IAErC,kCAAkC;IAClC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,uCAAI,GAAJ;IACpB,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC;IACjB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,uCAAQ,GAAR;IACpB,MAAM,UAAU,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,YAAY;IAE1C,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,OAAO,KAAK,KAAK,CAAC;AACpB;;;IA1EsB;IA6CA;IAgBA;IAKA;;AAlEA,+OAAA;AA6CA,+OAAA;AAgBA,+OAAA;AAKA,+OAAA"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/actions/archive.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { getSession } from \"./auth\";\n\n// This is a placeholder for your actual database implementation\n// You'll replace this with your PostgreSQL implementation later\n\nexport async function createIssue(formData: FormData) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  const year = Number.parseInt(formData.get(\"year\") as string);\n  const month = Number.parseInt(formData.get(\"month\") as string);\n  const number = Number.parseInt(formData.get(\"number\") as string);\n  const status = formData.get(\"status\") as string;\n  const pdfFile = formData.get(\"pdf\") as File;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Upload the PDF file to a storage service\n  // 3. Store the issue in your database\n\n  console.log(\"Creating issue:\", { year, month, number, status });\n\n  // For now, just redirect to the admin archive page\n  revalidatePath(\"/archive\");\n  revalidatePath(\"/admin/archive\");\n  redirect(\"/admin/archive\");\n}\n\nexport async function updateIssue(formData: FormData) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  const id = formData.get(\"id\") as string;\n  const year = Number.parseInt(formData.get(\"year\") as string);\n  const month = Number.parseInt(formData.get(\"month\") as string);\n  const number = Number.parseInt(formData.get(\"number\") as string);\n  const status = formData.get(\"status\") as string;\n  const pdfFile = formData.get(\"pdf\") as File;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Upload the PDF file to a storage service if a new one is provided\n  // 3. Update the issue in your database\n\n  console.log(\"Updating issue:\", { id, year, month, number, status });\n\n  // For now, just redirect to the admin archive page\n  revalidatePath(\"/archive\");\n  revalidatePath(`/archive/${id}`);\n  revalidatePath(\"/admin/archive\");\n  redirect(\"/admin/archive\");\n}\n\nexport async function deleteIssue(id: string) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  // In a real app, you would:\n  // 1. Delete the issue from your database\n  // 2. Delete the PDF file from your storage service\n\n  console.log(\"Deleting issue:\", id);\n\n  // For now, just redirect to the admin archive page\n  revalidatePath(\"/archive\");\n  revalidatePath(\"/admin/archive\");\n  redirect(\"/admin/archive\");\n}\n\nexport async function createYear(formData: FormData) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  const year = Number.parseInt(formData.get(\"year\") as string);\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Create a new year entry in your database\n\n  console.log(\"Creating year:\", year);\n\n  // For now, just redirect to the admin archive page\n  revalidatePath(\"/archive\");\n  revalidatePath(\"/admin/archive\");\n  redirect(\"/admin/archive\");\n}\n\nexport async function createArticle(formData: FormData) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  const issueId = formData.get(\"issueId\") as string;\n  const category = formData.get(\"category\") as string;\n  const authors = formData.get(\"authors\") as string;\n  const title = formData.get(\"title\") as string;\n  const pages = formData.get(\"pages\") as string;\n  const articleNumber = Number.parseInt(\n    formData.get(\"articleNumber\") as string\n  );\n  const pdfFile = formData.get(\"pdf\") as File;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Upload the PDF file to a storage service\n  // 3. Store the article in your database\n\n  console.log(\"Creating article:\", {\n    issueId,\n    category,\n    authors,\n    title,\n    pages,\n    articleNumber,\n  });\n\n  // For now, just redirect to the issue page\n  revalidatePath(`/archive/${issueId}`);\n  redirect(`/archive/${issueId}`);\n}\n\nexport async function updateArticle(formData: FormData) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  const issueId = formData.get(\"issueId\") as string;\n  const articleId = formData.get(\"articleId\") as string;\n  const category = formData.get(\"category\") as string;\n  const authors = formData.get(\"authors\") as string;\n  const title = formData.get(\"title\") as string;\n  const pages = formData.get(\"pages\") as string;\n  const articleNumber = Number.parseInt(\n    formData.get(\"articleNumber\") as string\n  );\n  const pdfFile = formData.get(\"pdf\") as File;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Upload the PDF file to a storage service if a new one is provided\n  // 3. Update the article in your database\n\n  console.log(\"Updating article:\", {\n    issueId,\n    articleId,\n    category,\n    authors,\n    title,\n    pages,\n    articleNumber,\n  });\n\n  // For now, just redirect to the issue page\n  revalidatePath(`/archive/${issueId}`);\n  redirect(`/archive/${issueId}`);\n}\n\nexport async function deleteArticle(issueId: string, articleId: string) {\n  const session = await getSession();\n\n  // Check if user is admin\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\");\n  }\n\n  // In a real app, you would:\n  // 1. Delete the article from your database\n  // 2. Delete the PDF file from your storage service\n\n  console.log(\"Deleting article:\", { issueId, articleId });\n\n  // For now, just redirect to the issue page\n  revalidatePath(`/archive/${issueId}`);\n  redirect(`/archive/${issueId}`);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Utility function to merge Tailwind classes properly.\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Mock function to connect to the database.\n * Replace this with your actual database connection logic.\n */\nexport async function connectToDatabase() {\n  return {\n    db: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      collection: (name: string) => ({\n        find: () => ({ toArray: async () => [] as unknown[] }),\n        findOne: async () => null,\n        insertOne: async () => ({ insertedId: \"mock-id\" }),\n        updateOne: async () => ({ modifiedCount: 1 }),\n      }),\n    },\n    client: {\n      close: async () => {},\n    },\n  };\n}\n\n/**\n * Formats a given date into Russian locale (e.g., \"1 января 2025 г.\").\n * @param date - The date to format\n * @returns A formatted date string\n */\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"ru-RU\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(date);\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAKO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAMO,eAAe;IACpB,OAAO;QACL,IAAI;YACF,6DAA6D;YAC7D,YAAY,CAAC,OAAiB,CAAC;oBAC7B,MAAM,IAAM,CAAC;4BAAE,SAAS,UAAY,EAAE;wBAAc,CAAC;oBACrD,SAAS,UAAY;oBACrB,WAAW,UAAY,CAAC;4BAAE,YAAY;wBAAU,CAAC;oBACjD,WAAW,UAAY,CAAC;4BAAE,eAAe;wBAAE,CAAC;gBAC9C,CAAC;QACH;QACA,QAAQ;YACN,OAAO,WAAa;QACtB;IACF;AACF;AAOO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,MAAM;QACN,OAAO;QACP,KAAK;IACP,GAAG,MAAM,CAAC;AACZ"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAHA;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,qcACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kbACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,qCACA"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/admin/archive/%5Bid%5D/edit/page.tsx"],"sourcesContent":["import Link from \"next/link\"\nimport { getSession } from \"@/app/actions/auth\"\nimport { updateIssue } from \"@/app/actions/archive\"\nimport { redirect } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\n// Mock function to get issue data\nconst getIssueData = (id: string) => {\n  const issueNumber = Number.parseInt(id, 10)\n\n  return {\n    id,\n    number: issueNumber,\n    year: issueNumber <= 497 ? 2023 : 2024,\n    month: issueNumber % 12 || 12,\n    status: issueNumber === 510 ? \"В печати\" : \"\",\n    pdfUrl: \"/sample.pdf\",\n  }\n}\n\nexport default async function EditIssuePage({ params }: { params: { id: string } }) {\n  const session = await getSession()\n\n  // Check if user is admin, if not, redirect to login\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\")\n  }\n\n  const issue = getIssueData(params.id)\n\n  const months = [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\",\n  ]\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <header className=\"border-b\">\n        <div className=\"container flex h-16 items-center justify-between\">\n          <div className=\"text-xl font-bold\">Панель администратора</div>\n          <nav className=\"flex gap-4\">\n            <Link href=\"/admin/archive\">\n              <button className=\"px-4 py-2 border rounded\">Назад к архиву</button>\n            </Link>\n          </nav>\n        </div>\n      </header>\n\n      <div className=\"container py-8\">\n        <h1 className=\"text-2xl font-bold mb-6\">Редактировать выпуск №{issue.number}</h1>\n\n        <div className=\"max-w-2xl mx-auto\">\n          <form action={updateIssue} className=\"space-y-6\">\n            <input type=\"hidden\" name=\"id\" value={issue.id} />\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"year\">Год</Label>\n                <Input id=\"year\" name=\"year\" type=\"number\" defaultValue={issue.year} required />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"month\">Месяц</Label>\n                <select id=\"month\" name=\"month\" className=\"w-full p-2 border rounded\" defaultValue={issue.month - 1}>\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>\n                      {month}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"number\">Номер выпуска</Label>\n              <Input id=\"number\" name=\"number\" type=\"number\" defaultValue={issue.number} required />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"status\">Статус (оставьте пустым для опубликованного выпуска)</Label>\n              <Input id=\"status\" name=\"status\" defaultValue={issue.status} placeholder=\"Например: В печати\" />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"pdf\">PDF файл выпуска (оставьте пустым, чтобы сохранить текущий)</Label>\n              <Input id=\"pdf\" name=\"pdf\" type=\"file\" accept=\".pdf\" />\n              {issue.pdfUrl && <p className=\"text-sm text-gray-500\">Текущий файл: {issue.pdfUrl.split(\"/\").pop()}</p>}\n            </div>\n\n            <div className=\"flex justify-end gap-4\">\n              <Link href=\"/admin/archive\">\n                <Button variant=\"outline\">Отмена</Button>\n              </Link>\n              <Button type=\"submit\">Сохранить изменения</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}