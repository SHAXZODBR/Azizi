{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/actions/auth.ts"],"sourcesContent":["\"use server\";\n\nimport { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\n\n// This is a placeholder for your actual database implementation\n// You'll replace this with your PostgreSQL implementation later\nconst mockUsers = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\",\n    role: \"admin\",\n  },\n  {\n    id: 2,\n    name: \"Regular User\",\n    email: \"user@example.com\",\n    password: \"user123\",\n    role: \"user\",\n  },\n];\n\nexport async function login(formData: FormData) {\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Check the credentials against your database\n  // 3. Hash the password and compare it securely\n\n  // This is a mock implementation\n  const user = mockUsers.find(\n    (u) => u.email === email && u.password === password\n  );\n\n  if (!user) {\n    // In a real app, you would handle this error better\n    console.error(\"Invalid credentials\");\n    return;\n  }\n\n  // Create a session (in a real app, you would use a proper session management system)\n  const session = {\n    userId: user.id,\n    name: user.name,\n    email: user.email,\n    role: user.role,\n    expires: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 1 week\n  };\n\n  // Store the session in a cookie\n  cookies().set(\"session\", JSON.stringify(session), {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n    maxAge: 60 * 60 * 24 * 7, // 1 week\n    path: \"/\",\n  });\n\n  // Redirect based on role\n  if (user.role === \"admin\") {\n    redirect(\"/admin/archive\");\n  } else {\n    redirect(\"/archive\");\n  }\n}\n\nexport async function register(formData: FormData) {\n  const name = formData.get(\"name\") as string;\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n  const role = formData.get(\"role\") as string;\n\n  // In a real app, you would:\n  // 1. Validate the input\n  // 2. Check if the user already exists\n  // 3. Hash the password\n  // 4. Store the user in your database\n\n  // For now, just redirect to login\n  redirect(\"/login\");\n}\n\nexport async function logout() {\n  cookies().delete(\"session\");\n  redirect(\"/login\");\n}\n\nexport async function getSession() {\n  const session = cookies().get(\"session\")?.value;\n\n  if (!session) {\n    return null;\n  }\n\n  return JSON.parse(session);\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;;AAAA;;;;;AAEA,gEAAgE;AAChE,gEAAgE;AAChE,MAAM,YAAY;IAChB;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;CACD;AAEM,eAAe,uCAAG,GAAH,MAAM,QAAkB;IAC5C,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;IAE9B,4BAA4B;IAC5B,wBAAwB;IACxB,iDAAiD;IACjD,+CAA+C;IAE/C,gCAAgC;IAChC,MAAM,OAAO,UAAU,IAAI,CACzB,CAAC,IAAM,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;IAG7C,IAAI,CAAC,MAAM;QACT,oDAAoD;QACpD,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,qFAAqF;IACrF,MAAM,UAAU;QACd,QAAQ,KAAK,EAAE;QACf,MAAM,KAAK,IAAI;QACf,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;QACf,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;IACpD;IAEA,gCAAgC;IAChC,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,CAAC,UAAU;QAChD,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;QACvB,MAAM;IACR;IAEA,yBAAyB;IACzB,IAAI,KAAK,IAAI,KAAK,SAAS;QACzB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;AACF;AAEO,eAAe,uCAAM,GAAN,SAAS,QAAkB;IAC/C,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;IAC9B,MAAM,OAAO,SAAS,GAAG,CAAC;IAE1B,4BAA4B;IAC5B,wBAAwB;IACxB,sCAAsC;IACtC,uBAAuB;IACvB,qCAAqC;IAErC,kCAAkC;IAClC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,uCAAI,GAAJ;IACpB,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC;IACjB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,uCAAQ,GAAR;IACpB,MAAM,UAAU,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,YAAY;IAE1C,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,OAAO,KAAK,KAAK,CAAC;AACpB;;;IA1EsB;IA6CA;IAgBA;IAKA;;AAlEA,+OAAA;AA6CA,+OAAA;AAgBA,+OAAA;AAKA,+OAAA"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/shaxzodbr/Desktop/Azizi/Azizi/app/admin/archive/page.tsx"],"sourcesContent":["import Link from \"next/link\"\nimport { getSession } from \"@/app/actions/auth\"\nimport { redirect } from \"next/navigation\"\n\n// This represents the data structure for each archive entry\ninterface ArchiveEntry {\n  id: string\n  number: number\n  status?: string\n  content?: string\n  imageUrl?: string\n  pdfUrl?: string\n}\n\n// Define a proper type for the entries object\ninterface EntriesMap {\n  [key: number]: ArchiveEntry | undefined\n}\n\ninterface YearData {\n  year: number\n  entries: EntriesMap\n}\n\n// Mock data structure - replace with your actual data fetching logic\nconst getArchiveData = async (): Promise<YearData[]> => {\n  // In a real implementation, this would come from your database\n  return [\n    {\n      year: 2025,\n      entries: {\n        0: { id: \"510\", number: 510, status: \"В печати\" },\n      },\n    },\n    {\n      year: 2024,\n      entries: {\n        0: { id: \"498\", number: 498 },\n        1: { id: \"499\", number: 499 },\n        2: { id: \"500\", number: 500 },\n        3: { id: \"501\", number: 501 },\n        4: { id: \"502\", number: 502 },\n        5: { id: \"503\", number: 503 },\n        6: { id: \"504\", number: 504 },\n        7: { id: \"505\", number: 505 },\n        8: { id: \"506\", number: 506 },\n        9: { id: \"507\", number: 507 },\n        10: { id: \"508\", number: 508 },\n        11: { id: \"509\", number: 509 },\n      },\n    },\n    {\n      year: 2023,\n      entries: {\n        0: { id: \"486\", number: 486 },\n        1: { id: \"487\", number: 487 },\n        2: { id: \"488\", number: 488 },\n        3: { id: \"489\", number: 489 },\n        4: { id: \"490\", number: 490 },\n        5: { id: \"491\", number: 491 },\n        6: { id: \"492\", number: 492 },\n        7: { id: \"493\", number: 493 },\n        8: { id: \"494\", number: 494 },\n        9: { id: \"495\", number: 495 },\n        10: { id: \"496\", number: 496 },\n        11: { id: \"497\", number: 497 },\n      },\n    },\n  ]\n}\n\nconst months = [\n  \"Январь\",\n  \"Февраль\",\n  \"Март\",\n  \"Апрель\",\n  \"Май\",\n  \"Июнь\",\n  \"Июль\",\n  \"Август\",\n  \"Сентябрь\",\n  \"Октябрь\",\n  \"Ноябрь\",\n  \"Декабрь\",\n]\n\nexport default async function AdminArchivePage() {\n  const session = await getSession()\n\n  // Check if user is admin, if not, redirect to login\n  if (!session || session.role !== \"admin\") {\n    redirect(\"/login\")\n  }\n\n  const archiveData = await getArchiveData()\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <header className=\"border-b\">\n        <div className=\"container flex h-16 items-center justify-between\">\n          <div className=\"text-xl font-bold\">Панель администратора</div>\n          <nav className=\"flex gap-4\">\n            <Link href=\"/archive\">\n              <button className=\"px-4 py-2 border rounded\">Просмотр архива</button>\n            </Link>\n            <form action=\"/api/logout\" method=\"POST\">\n              <button className=\"px-4 py-2 border rounded\">Выйти</button>\n            </form>\n          </nav>\n        </div>\n      </header>\n\n      <div className=\"container py-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-2xl font-bold\">Управление архивом</h1>\n          <Link href=\"/admin/archive/new-year\">\n            <button className=\"px-4 py-2 bg-blue-600 text-white rounded\">Добавить новый год</button>\n          </Link>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"border p-2 bg-gray-100\">Год</th>\n                {months.map((month) => (\n                  <th key={month} className=\"border p-2 bg-gray-100\">\n                    {month}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {archiveData.map((yearData) => (\n                <tr key={yearData.year}>\n                  <td className=\"border p-2 font-bold\">{yearData.year}</td>\n                  {months.map((_, monthIndex) => {\n                    const entry = yearData.entries[monthIndex]\n                    return (\n                      <td key={monthIndex} className=\"border p-2 text-center\">\n                        {entry ? (\n                          <div className=\"flex flex-col items-center gap-1\">\n                            <div>\n                              {entry.status ? (\n                                <span className=\"text-gray-600\">{entry.status}</span>\n                              ) : (\n                                <Link href={`/archive/${entry.id}`} className=\"text-blue-600 hover:underline\">\n                                  №{entry.number}\n                                </Link>\n                              )}\n                            </div>\n                            <div className=\"flex gap-1\">\n                              <Link href={`/admin/archive/${entry.id}/edit`}>\n                                <button className=\"px-2 py-1 text-xs border border-blue-600 text-blue-600 rounded\">\n                                  Изменить\n                                </button>\n                              </Link>\n                              <form action={`/api/archive/${entry.id}/delete`} method=\"POST\">\n                                <button className=\"px-2 py-1 text-xs border border-red-600 text-red-600 rounded\">\n                                  Удалить\n                                </button>\n                              </form>\n                            </div>\n                          </div>\n                        ) : (\n                          <Link href={`/admin/archive/new?year=${yearData.year}&month=${monthIndex}`}>\n                            <button className=\"px-2 py-1 text-xs border border-green-600 text-green-600 rounded\">\n                              + Добавить\n                            </button>\n                          </Link>\n                        )}\n                      </td>\n                    )\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}